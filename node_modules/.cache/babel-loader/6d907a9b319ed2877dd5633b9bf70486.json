{"ast":null,"code":"var _jsxFileName = \"/Users/trapbookpro/Development/medicine-trackr/src/components/App.js\";\n// import React from \"react\"\nimport Signup from \"./Signup\";\nimport { Container } from \"react-bootstrap\"; // import { AuthProvider } from \"../contexts/AuthContext\"\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\"; // import Login from \"./Login\"\n\nimport PrivateRoute from \"./PrivateRoute\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport UpdateProfile from \"./UpdateProfile\";\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport fire from './fire';\nimport Login from './components/Login';\nimport HomePage from './components/HomePage';\nimport { handleLogin, handleLogout, authListener, handleSignUp } from './functions/index';\n\nconst App = () => {\n  // state variables \n\n  /*\n  'useState' Usage: \n  const [VARIABLE_NAME, FUNCTION_TO_CHANGE_THE_VARIABLE] = useState(INITIAL_VARIABLE_VALUE)\n  */\n  const [user, setUser] = useState('');\n  const [userDetails, setUserDetails] = useState({});\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n  const [loading, setLoading] = useState(true); // clear text inputs \n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  }; // clear errors \n\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  }; //useEffect runs as soon as the page loads \n\n\n  useEffect(() => {\n    authListener(setUser, setLoading, setUserDetails); // check if a user is already logged in so that we know which page to display\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"HUNGER WARRIOR\")), loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }) : !user ? /*#__PURE__*/React.createElement(Login, {\n    email: email,\n    setEmail: setEmail,\n    password: password,\n    setPassword: setPassword,\n    handleLogin: handleLogin,\n    handleSignUp: handleSignUp,\n    hasAccount: hasAccount,\n    setHasAccount: setHasAccount,\n    emailError: emailError,\n    passwordError: passwordError,\n    setEmailError: setEmailError,\n    setPasswordError: setPasswordError,\n    userDetails: userDetails,\n    setUserDetails: setUserDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(HomePage, {\n    handleLogout: handleLogout,\n    user: user,\n    userDetails: userDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default App; // function App() {\n//   return (\n//     <Container\n//       className=\"d-flex align-items-center justify-content-center\"\n//       style={{ minHeight: \"100vh\" }}\n//     >\n//       <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n//         <Router>\n//           <AuthProvider>\n//             <Switch>\n//               <PrivateRoute exact path=\"/\" component={Dashboard} />\n//               <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n//               <Route path=\"/signup\" component={Signup} />\n//               <Route path=\"/login\" component={Login} />\n//               <Route path=\"/forgot-password\" component={ForgotPassword} />\n//             </Switch>\n//           </AuthProvider>\n//         </Router>\n//       </div>\n//     </Container>\n//   )\n// }\n// export default App","map":{"version":3,"sources":["/Users/trapbookpro/Development/medicine-trackr/src/components/App.js"],"names":["Signup","Container","BrowserRouter","Router","Switch","Route","Dashboard","PrivateRoute","ForgotPassword","UpdateProfile","React","useState","useEffect","fire","Login","HomePage","handleLogin","handleLogout","authListener","handleSignUp","App","user","setUser","userDetails","setUserDetails","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","hasAccount","setHasAccount","loading","setLoading","clearInputs","clearErrors"],"mappings":";AAAA;AACA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,iBAA1B,C,CACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,WAAR,EAAqBC,YAArB,EAAmCC,YAAnC,EAAiDC,YAAjD,QAAoE,mBAApE;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB;;AACA;;;;AAIA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACoB,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACwB,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,CAAC,IAAD,CAAtC,CAdgB,CAiBhB;;AACA,QAAM0B,WAAW,GAAG,MAAM;AACxBX,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAHD,CAlBgB,CAuBhB;;;AACA,QAAMU,WAAW,GAAG,MAAM;AACxBR,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAHD,CAxBgB,CA8BhB;;;AACApB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,CAACI,OAAD,EAAUc,UAAV,EAAsBZ,cAAtB,CAAZ,CADc,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAS,IAAA,SAAS,EAAG,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAG,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAIGW,OAAO,gBACR;AAAK,IAAA,SAAS,EAAG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAEN,CAACd,IAAD,gBAAS,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAII,KAAhB;AACP,IAAA,QAAQ,EAAIC,QADL;AAEP,IAAA,QAAQ,EAAIC,QAFL;AAGP,IAAA,WAAW,EAAIC,WAHR;AAIP,IAAA,WAAW,EAAIZ,WAJR;AAKP,IAAA,YAAY,EAAIG,YALT;AAMP,IAAA,UAAU,EAAIc,UANP;AAOP,IAAA,aAAa,EAAIC,aAPV;AAQP,IAAA,UAAU,EAAIL,UARP;AASP,IAAA,aAAa,EAAIE,aATV;AAUP,IAAA,aAAa,EAAID,aAVV;AAWP,IAAA,gBAAgB,EAAIE,gBAXb;AAYP,IAAA,WAAW,EAAIT,WAZR;AAaP,IAAA,cAAc,EAAIC,cAbX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAT,gBAeA,oBAAC,QAAD;AACE,IAAA,YAAY,EAAIP,YADlB;AACgC,IAAA,IAAI,EAAII,IADxC;AAEE,IAAA,WAAW,EAAIE,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,CADF;AAiCD,CArED;;AAuEA,eAAeH,GAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React from \"react\"\nimport Signup from \"./Signup\"\nimport { Container } from \"react-bootstrap\"\n// import { AuthProvider } from \"../contexts/AuthContext\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Dashboard from \"./Dashboard\"\n// import Login from \"./Login\"\nimport PrivateRoute from \"./PrivateRoute\"\nimport ForgotPassword from \"./ForgotPassword\"\nimport UpdateProfile from \"./UpdateProfile\"\nimport './App.css';\nimport React, {useState, useEffect} from \"react\"; \nimport fire from './fire'; \nimport Login from './components/Login'; \nimport HomePage from './components/HomePage'; \nimport {handleLogin, handleLogout, authListener, handleSignUp} from './functions/index'; \n\nconst App = () => {\n  \n  // state variables \n  /*\n  'useState' Usage: \n  const [VARIABLE_NAME, FUNCTION_TO_CHANGE_THE_VARIABLE] = useState(INITIAL_VARIABLE_VALUE)\n  */\n  const [user, setUser] = useState(''); \n  const [userDetails, setUserDetails] = useState({}); \n  const [email, setEmail] = useState(''); \n  const [password, setPassword] = useState(''); \n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState(''); \n  const [hasAccount, setHasAccount] = useState(false);\n  const [loading, setLoading] = useState(true);  \n  \n  \n  // clear text inputs \n  const clearInputs = () => {\n    setEmail('');\n    setPassword(''); \n  }\n\n  // clear errors \n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  }\n\n\n  //useEffect runs as soon as the page loads \n  useEffect(() => {\n    authListener(setUser, setLoading, setUserDetails); \n    // check if a user is already logged in so that we know which page to display\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <section className = \"banner\">\n        <h1 className = \"title\">HUNGER WARRIOR</h1>\n      </section>\n      {loading? \n      <div className = \"loader\"></div>: \n        !user ? (<Login email = {email} \n          setEmail = {setEmail} \n          password = {password} \n          setPassword = {setPassword}\n          handleLogin = {handleLogin}\n          handleSignUp = {handleSignUp}\n          hasAccount = {hasAccount}\n          setHasAccount = {setHasAccount}\n          emailError = {emailError}\n          passwordError = {passwordError}\n          setEmailError = {setEmailError}\n          setPasswordError = {setPasswordError}\n          userDetails = {userDetails}\n          setUserDetails = {setUserDetails}\n      />) : (\n        <HomePage \n          handleLogout = {handleLogout} user = {user} \n          userDetails = {userDetails}\n          />\n      ) \n    \n      }\n      {/* Check if a user is logged in. If so, display homepage. Else, display login page*/}\n     \n      </div>\n  );\n}\n\nexport default App;\n// function App() {\n//   return (\n//     <Container\n//       className=\"d-flex align-items-center justify-content-center\"\n//       style={{ minHeight: \"100vh\" }}\n//     >\n//       <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n//         <Router>\n//           <AuthProvider>\n//             <Switch>\n//               <PrivateRoute exact path=\"/\" component={Dashboard} />\n//               <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n//               <Route path=\"/signup\" component={Signup} />\n//               <Route path=\"/login\" component={Login} />\n//               <Route path=\"/forgot-password\" component={ForgotPassword} />\n//             </Switch>\n//           </AuthProvider>\n//         </Router>\n//       </div>\n//     </Container>\n//   )\n// }\n\n// export default App\n"]},"metadata":{},"sourceType":"module"}