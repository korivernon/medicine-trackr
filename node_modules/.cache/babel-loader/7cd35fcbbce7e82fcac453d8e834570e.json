{"ast":null,"code":"var _jsxFileName = \"/Users/trapbookpro/Development/medicine-trackr/src/contexts/AuthContext.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\nconst db = fire.firestore();\nconst AuthContext = React.createContext();\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider({\n  children\n}) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password) {\n    auth.createUserWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    }).then(data => {\n      userId = data.user.uid;\n      return data.user.getIdToken();\n    }).then(token => {\n      token = token;\n      const userCredentials = {\n        email: email,\n        userId: userId\n      };\n      return db.doc(`/users/${email}`).set(userCredentials);\n    });\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, !loading && children);\n}","map":{"version":3,"sources":["/Users/trapbookpro/Development/medicine-trackr/src/contexts/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","db","fire","firestore","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","signup","email","password","createUserWithEmailAndPassword","catch","err","code","setEmailError","message","setPasswordError","then","data","userId","user","uid","getIdToken","token","userCredentials","doc","set","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","unsubscribe","onAuthStateChanged","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\"\nimport { auth } from \"../firebase\"\n\nconst db = fire.firestore();\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState()\n  const [loading, setLoading] = useState(true)\n\n  function signup(email, password) {\n    auth.createUserWithEmailAndPassword(email, password).catch(err => {\n      switch(err.code){\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message); \n          break;\n        case \"auth/weak-password\":\n          setPasswordError(err.message); \n          break; \n      }\n    }).then((data) => {\n        userId = data.user.uid; \n        return data.user.getIdToken();\n    }).then(token => {\n        token = token;\n        const userCredentials = {\n            email : email,\n            userId : userId\n        }\n        return db.doc(`/users/${email}`).set(userCredentials);\n    });\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password)\n  }\n\n  function logout() {\n    return auth.signOut()\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email)\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email)\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password)\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user)\n      setLoading(false)\n    })\n\n    return unsubscribe\n  }, [])\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}