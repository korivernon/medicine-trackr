{"ast":null,"code":"var _jsxFileName = \"/Users/trapbookpro/Development/medicine-trackr/src/components/Table/Table.js\";\nimport React, { useMemo, useState } from \"react\";\nimport { Table, Thead, Tbody, Tr, Th, Td, Text, Box, Button, IconButton, Flex, Input, Spacer, Menu, MenuButton, MenuItemOption, MenuOptionGroup, MenuList } from \"@chakra-ui/react\";\nimport { TriangleDownIcon, TriangleUpIcon, ChevronRightIcon, ArrowRightIcon, ChevronLeftIcon, ArrowLeftIcon, ChevronDownIcon } from \"@chakra-ui/icons\"; // import Data from \"../Dataset/Data.json\";\n\nimport Data from \"../../Dataset/Data.json\";\nimport { useTable, useSortBy, usePagination } from \"react-table\";\nimport { COLUMNS } from \"./Columns\";\n\nconst DataTable = () => {\n  //   let columns = Object.keys(Data[0]);  //columns list before using react table.\n  // we momoized the columns and data so that our table don't get render again and again.\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => Data, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  }, useSortBy, usePagination);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    rows,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    state,\n    setSortBy,\n    allColumns\n  } = tableInstance;\n  const {\n    pageSize,\n    pageIndex\n  } = state;\n  const [selectedSortColumn, setSelectedSortColumn] = useState({\n    id: \"\",\n    desc: false\n  });\n\n  function handleSort(e) {\n    let temp = Object.assign({}, selectedSortColumn);\n    temp[\"id\"] = e;\n    setSelectedSortColumn(temp);\n    setSortBy([temp]);\n  }\n\n  const typeOfSort = e => {\n    let tempColumn;\n\n    if (e == \"0\") {\n      tempColumn = Object.assign({}, selectedSortColumn);\n      tempColumn[\"desc\"] = false;\n      setSelectedSortColumn(tempColumn);\n      setSortBy([tempColumn]);\n    } else {\n      tempColumn = Object.assign({}, selectedSortColumn);\n      tempColumn[\"desc\"] = true;\n      setSelectedSortColumn(tempColumn);\n      setSortBy([tempColumn]);\n    }\n  };\n\n  console.log({\n    cols: allColumns\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuButton, {\n    alignSelf: \"center\",\n    rightIcon: /*#__PURE__*/React.createElement(ChevronDownIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 24\n      }\n    }),\n    variant: \"outline\",\n    mx: \"1em\",\n    size: \"xs\",\n    as: Button,\n    colorScheme: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, selectedSortColumn[\"desc\"] == true ? \"Descending\" : \"Ascending\"), /*#__PURE__*/React.createElement(MenuList, {\n    color: \"gray.800\",\n    zIndex: \"3\",\n    minWidth: \"240px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuOptionGroup, {\n    type: \"radio\",\n    defaultValue: \"0\",\n    onChange: e => typeOfSort(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItemOption, {\n    key: 0,\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Ascending\"), /*#__PURE__*/React.createElement(MenuItemOption, {\n    key: 1,\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Descending\")))), /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuButton, {\n    alignSelf: \"center\",\n    rightIcon: /*#__PURE__*/React.createElement(ChevronDownIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 24\n      }\n    }),\n    variant: \"outline\",\n    mx: \"1em\",\n    size: \"xs\",\n    as: Button,\n    colorScheme: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Sort By\"), /*#__PURE__*/React.createElement(MenuList, {\n    color: \"gray.800\",\n    zIndex: \"3\",\n    minWidth: \"240px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuOptionGroup, {\n    type: \"radio\",\n    onChange: e => handleSort(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, allColumns.map((column, idx) => /*#__PURE__*/React.createElement(MenuItemOption, {\n    icon: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/React.createElement(TriangleDownIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(TriangleUpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }) : \"\",\n    key: idx,\n    value: column.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, column.Header))))), /*#__PURE__*/React.createElement(Button, {\n    size: \"xs\",\n    m: \"4px\",\n    colorScheme: \"red\",\n    variant: \"outline\",\n    onClick: () => setSortBy([]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, \"Reset Sorting\")), /*#__PURE__*/React.createElement(Box, {\n    maxH: \"30em\",\n    overflowY: \"scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, Object.assign({}, getTableProps(), {\n    size: \"sm\",\n    variant: \"simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Thead, {\n    p: \"0\",\n    position: \"sticky\",\n    zIndex: \"1\",\n    top: \"0px\",\n    style: {\n      overflow: \"scroll\"\n    },\n    bg: \"gray.100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, headerGroups.map((headerGroup, indexKey) => /*#__PURE__*/React.createElement(Tr, Object.assign({\n    p: \"0\",\n    key: indexKey\n  }, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }), headerGroup.headers.map((column, columnIndex) => /*#__PURE__*/React.createElement(Th, Object.assign({\n    borderColor: \"gray.200\",\n    p: \"1em\",\n    className: \"th1\",\n    key: columnIndex,\n    color: \"gray.800\"\n  }, column.getHeaderProps(column.getSortByToggleProps()), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }), column.render(\"Header\"), column.isSorted ? column.isSortedDesc ? /*#__PURE__*/React.createElement(TriangleDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(TriangleUpIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }) : \"\"))))), /*#__PURE__*/React.createElement(Tbody, Object.assign({\n    className: \"body1\",\n    p: \"1em\"\n  }, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }), page && page.length > 0 ? page.map(row => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(Tr, Object.assign({\n      className: \"tr1\"\n    }, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(Td, Object.assign({\n        className: \"td1\",\n        color: \"gray.600\"\n      }, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }\n      }), cell.render(\"Cell\"), \" \");\n    }));\n  }) : /*#__PURE__*/React.createElement(Text, {\n    textAlign: \"center\",\n    fontSize: \"1em\",\n    mx: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, \"No Data Found\")))), /*#__PURE__*/React.createElement(Flex, {\n    borderTop: \"5px solid\",\n    borderColor: \"gray.200\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Flex, {\n    alignContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    _focus: {\n      boxShadow: \"\"\n    },\n    _hover: {\n      backgroundColor: \"\"\n    },\n    _active: {\n      backgroundColor: \"\"\n    },\n    color: \"gray.800\",\n    bg: \"white\",\n    fontSize: \"15px\",\n    icon: /*#__PURE__*/React.createElement(ArrowLeftIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    }),\n    disabled: !canPreviousPage,\n    onClick: () => gotoPage(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    _focus: {\n      boxShadow: \"\"\n    },\n    _hover: {\n      backgroundColor: \"\"\n    },\n    _active: {\n      backgroundColor: \"\"\n    },\n    color: \"gray.800\",\n    bg: \"white\",\n    fontSize: \"30px\",\n    icon: /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }\n    }),\n    disabled: !canPreviousPage,\n    onClick: () => previousPage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    m: \"0\",\n    alignSelf: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, pageIndex + 1, \" - \", pageOptions.length, \" \"), /*#__PURE__*/React.createElement(IconButton, {\n    _focus: {\n      boxShadow: \"\"\n    },\n    _hover: {\n      backgroundColor: \"\"\n    },\n    _active: {\n      backgroundColor: \"\"\n    },\n    color: \"gray.800\",\n    bg: \"white\",\n    fontSize: \"30px\",\n    icon: /*#__PURE__*/React.createElement(ChevronRightIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }),\n    disabled: !canNextPage,\n    onClick: () => nextPage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    _focus: {\n      boxShadow: \"\"\n    },\n    _hover: {\n      backgroundColor: \"\"\n    },\n    _active: {\n      backgroundColor: \"\"\n    },\n    color: \"gray.800\",\n    bg: \"white\",\n    fontSize: \"15px\",\n    icon: /*#__PURE__*/React.createElement(ArrowRightIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }\n    }),\n    disabled: !canNextPage,\n    onClick: () => gotoPage(pageCount - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    m: \"0\",\n    alignSelf: \"center\",\n    borderRightColor: \"\",\n    defaultChecked: pageIndex + 1,\n    borderColor: \"gray.300\",\n    fontWeight: \"bold\",\n    fontSize: \"sm\",\n    whiteSpace: \"nowrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, \"Go to page\"), /*#__PURE__*/React.createElement(Input, {\n    mx: \"5px\",\n    alignSelf: \"center\",\n    borderColor: \"gray.600\",\n    onChange: e => {\n      let pageNumber = e.target.value ? Number(e.target.value) - 1 : 0;\n      gotoPage(pageNumber);\n    },\n    w: \"10%\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default DataTable;","map":{"version":3,"sources":["/Users/trapbookpro/Development/medicine-trackr/src/components/Table/Table.js"],"names":["React","useMemo","useState","Table","Thead","Tbody","Tr","Th","Td","Text","Box","Button","IconButton","Flex","Input","Spacer","Menu","MenuButton","MenuItemOption","MenuOptionGroup","MenuList","TriangleDownIcon","TriangleUpIcon","ChevronRightIcon","ArrowRightIcon","ChevronLeftIcon","ArrowLeftIcon","ChevronDownIcon","Data","useTable","useSortBy","usePagination","COLUMNS","DataTable","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","gotoPage","pageCount","state","setSortBy","allColumns","pageSize","pageIndex","selectedSortColumn","setSelectedSortColumn","id","desc","handleSort","e","temp","Object","assign","typeOfSort","tempColumn","console","log","cols","map","column","idx","isSorted","isSortedDesc","Header","overflow","headerGroup","indexKey","getHeaderGroupProps","headers","columnIndex","getHeaderProps","getSortByToggleProps","render","length","row","getRowProps","cells","cell","getCellProps","boxShadow","backgroundColor","pageNumber","target","value","Number"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Text,\n  Box,\n  Button,\n  IconButton,\n  Flex,\n  Input,\n  Spacer,\n  Menu,\n  MenuButton,\n  MenuItemOption,\n  MenuOptionGroup,\n  MenuList,\n} from \"@chakra-ui/react\";\nimport {\n  TriangleDownIcon,\n  TriangleUpIcon,\n  ChevronRightIcon,\n  ArrowRightIcon,\n  ChevronLeftIcon,\n  ArrowLeftIcon,\n  ChevronDownIcon,\n} from \"@chakra-ui/icons\";\n\n// import Data from \"../Dataset/Data.json\";\nimport Data from \"../../Dataset/Data.json\";\nimport { useTable, useSortBy, usePagination } from \"react-table\";\nimport { COLUMNS } from \"./Columns\";\nconst DataTable = () => {\n  //   let columns = Object.keys(Data[0]);  //columns list before using react table.\n\n  // we momoized the columns and data so that our table don't get render again and again.\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => Data, []);\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n    },\n    useSortBy,\n    usePagination\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    rows,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    state,\n    setSortBy,\n    allColumns,\n  } = tableInstance;\n\n  const { pageSize, pageIndex } = state;\n\n  const [selectedSortColumn, setSelectedSortColumn] = useState({\n    id: \"\",\n    desc: false,\n  });\n\n  function handleSort(e) {\n    let temp = Object.assign({}, selectedSortColumn);\n    temp[\"id\"] = e;\n    setSelectedSortColumn(temp);\n    setSortBy([temp]);\n  }\n\n  const typeOfSort = (e) => {\n    let tempColumn;\n    if (e == \"0\") {\n      tempColumn = Object.assign({}, selectedSortColumn);\n      tempColumn[\"desc\"] = false;\n      setSelectedSortColumn(tempColumn);\n      setSortBy([tempColumn]);\n    } else {\n      tempColumn = Object.assign({}, selectedSortColumn);\n      tempColumn[\"desc\"] = true;\n      setSelectedSortColumn(tempColumn);\n      setSortBy([tempColumn]);\n    }\n  };\n\n  console.log({ cols: allColumns });\n  return (\n    <>\n      <Box>\n        <Menu>\n          <MenuButton\n            alignSelf=\"center\"\n            rightIcon={<ChevronDownIcon />}\n            variant=\"outline\"\n            mx=\"1em\"\n            size=\"xs\"\n            as={Button}\n            colorScheme=\"blue\"\n          >\n            {selectedSortColumn[\"desc\"] == true ? \"Descending\" : \"Ascending\"}\n          </MenuButton>\n          <MenuList color=\"gray.800\" zIndex=\"3\" minWidth=\"240px\">\n            <MenuOptionGroup\n              type=\"radio\"\n              defaultValue={\"0\"}\n              onChange={(e) => typeOfSort(e)}\n            >\n              <MenuItemOption key={0} value={\"0\"}>\n                Ascending\n              </MenuItemOption>\n              <MenuItemOption key={1} value={\"1\"}>\n                Descending\n              </MenuItemOption>\n            </MenuOptionGroup>\n          </MenuList>\n        </Menu>\n        <Menu>\n          <MenuButton\n            alignSelf=\"center\"\n            rightIcon={<ChevronDownIcon />}\n            variant=\"outline\"\n            mx=\"1em\"\n            size=\"xs\"\n            as={Button}\n            colorScheme=\"blue\"\n          >\n            Sort By\n          </MenuButton>\n          <MenuList color=\"gray.800\" zIndex=\"3\" minWidth=\"240px\">\n            <MenuOptionGroup type=\"radio\" onChange={(e) => handleSort(e)}>\n              {allColumns.map((column, idx) => (\n                <MenuItemOption\n                  icon={\n                    column.isSorted ? (\n                      column.isSortedDesc ? (\n                        <TriangleDownIcon />\n                      ) : (\n                        <TriangleUpIcon />\n                      )\n                    ) : (\n                      \"\"\n                    )\n                  }\n                  key={idx}\n                  value={column.id}\n                >\n                  {column.Header}\n                </MenuItemOption>\n              ))}\n            </MenuOptionGroup>\n          </MenuList>\n        </Menu>\n        <Button\n          size=\"xs\"\n          m=\"4px\"\n          colorScheme=\"red\"\n          variant=\"outline\"\n          onClick={() => setSortBy([])}\n        >\n          Reset Sorting\n        </Button>\n      </Box>\n      <Box maxH=\"30em\" overflowY=\"scroll\">\n        <Table {...getTableProps()} size=\"sm\" variant=\"simple\">\n          <Thead\n            p=\"0\"\n            position=\"sticky\"\n            zIndex=\"1\"\n            top=\"0px\"\n            style={{ overflow: \"scroll\" }}\n            bg=\"gray.100\"\n          >\n            {headerGroups.map((headerGroup, indexKey) => (\n              <Tr p=\"0\" key={indexKey} {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column, columnIndex) => (\n                  <Th\n                    borderColor=\"gray.200\"\n                    p=\"1em\"\n                    className=\"th1\"\n                    key={columnIndex}\n                    color={\"gray.800\"}\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                  >\n                    {/* This will render the Title of column */}\n                    {column.render(\"Header\")}\n                    {column.isSorted ? (\n                      column.isSortedDesc ? (\n                        <TriangleDownIcon />\n                      ) : (\n                        <TriangleUpIcon />\n                      )\n                    ) : (\n                      \"\"\n                    )}\n                  </Th>\n                ))}\n              </Tr>\n            ))}\n          </Thead>\n\n          <Tbody className=\"body1\" p=\"1em\" {...getTableBodyProps()}>\n            {page && page.length > 0 ? (\n              page.map((row) => {\n                prepareRow(row);\n                return (\n                  <Tr className=\"tr1\" {...row.getRowProps()}>\n                    {row.cells.map((cell) => {\n                      return (\n                        <Td\n                          className=\"td1\"\n                          color={\"gray.600\"}\n                          {...cell.getCellProps()}\n                        >\n                          {cell.render(\"Cell\")}{\" \"}\n                        </Td>\n                      );\n                    })}\n                  </Tr>\n                );\n              })\n            ) : (\n              <Text textAlign=\"center\" fontSize=\"1em\" mx=\"auto\">\n                No Data Found\n              </Text>\n            )}\n          </Tbody>\n        </Table>\n\n      </Box>\n      <Flex\n          borderTop=\"5px solid\"\n          borderColor=\"gray.200\"\n          justifyContent=\"flex-end\"\n        >\n          <Spacer />\n          <Flex alignContent=\"center\">\n            <IconButton\n              _focus={{ boxShadow: \"\" }}\n              _hover={{ backgroundColor: \"\" }}\n              _active={{ backgroundColor: \"\" }}\n              color=\"gray.800\"\n              bg=\"white\"\n              fontSize=\"15px\"\n              icon={<ArrowLeftIcon />}\n              disabled={!canPreviousPage}\n              onClick={() => gotoPage(0)}\n            />\n            <IconButton\n              _focus={{ boxShadow: \"\" }}\n              _hover={{ backgroundColor: \"\" }}\n              _active={{ backgroundColor: \"\" }}\n              color=\"gray.800\"\n              bg=\"white\"\n              fontSize=\"30px\"\n              icon={<ChevronLeftIcon />}\n              disabled={!canPreviousPage}\n              onClick={() => previousPage()}\n            />\n            <Text m=\"0\" alignSelf=\"center\">\n              {pageIndex + 1} - {pageOptions.length}{\" \"}\n            </Text>\n            <IconButton\n              _focus={{ boxShadow: \"\" }}\n              _hover={{ backgroundColor: \"\" }}\n              _active={{ backgroundColor: \"\" }}\n              color=\"gray.800\"\n              bg=\"white\"\n              fontSize=\"30px\"\n              icon={<ChevronRightIcon />}\n              disabled={!canNextPage}\n              onClick={() => nextPage()}\n            />\n            <IconButton\n              _focus={{ boxShadow: \"\" }}\n              _hover={{ backgroundColor: \"\" }}\n              _active={{ backgroundColor: \"\" }}\n              color=\"gray.800\"\n              bg=\"white\"\n              fontSize=\"15px\"\n              icon={<ArrowRightIcon />}\n              disabled={!canNextPage}\n              onClick={() => gotoPage(pageCount - 1)}\n            />\n            <Text\n              m=\"0\"\n              alignSelf=\"center\"\n              borderRightColor=\"\"\n              defaultChecked={pageIndex + 1}\n              borderColor=\"gray.300\"\n              fontWeight=\"bold\"\n              fontSize=\"sm\"\n              whiteSpace=\"nowrap\"\n            >\n              Go to page\n            </Text>\n            <Input\n              mx=\"5px\"\n              alignSelf=\"center\"\n              borderColor=\"gray.600\"\n              onChange={(e) => {\n                let pageNumber = e.target.value\n                  ? Number(e.target.value) - 1\n                  : 0;\n                gotoPage(pageNumber);\n              }}\n              w=\"10%\"\n              size=\"sm\"\n            />\n          </Flex>\n        </Flex>\n    </>\n  );\n};\n\nexport default DataTable;"]},"metadata":{},"sourceType":"module"}